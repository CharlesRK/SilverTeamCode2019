package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.hardware.CRServo;
import com.qualcomm.robotcore.util.ElapsedTime;

@TeleOp(name = "Silver 2019 TeleOp")
public class Tele1_SR extends LinearOpMode {
    //Declarations
    private DcMotor leftFront, rightFront, leftBack, rightBack, intakeLeft, intakeRight, lift;
    private Servo foundationL, foundationR, blockHolder, rackPinion;
    private CRServo wheel;

    public void runOpMode() {
        double motorPow = 0.5;

        //Setting configuration
        leftFront = hardwareMap.dcMotor.get("fL");
        rightFront = hardwareMap.dcMotor.get("fR");
        leftBack = hardwareMap.dcMotor.get("bL");
        rightBack = hardwareMap.dcMotor.get("bR");
        intakeRight = hardwareMap.dcMotor.get("inL");
        intakeLeft = hardwareMap.dcMotor.get("inR");
        lift = hardwareMap.dcMotor.get("lift");
        foundationL = hardwareMap.get(Servo.class, "foundL");
        foundationR = hardwareMap.get(Servo.class, "foundR");
        rackPinion = hardwareMap.get(Servo.class, "out");
        blockHolder = hardwareMap.get(Servo.class, "hold");
        wheel = hardwareMap.get(CRServo.class, "pusher");

        //Setting direction
        intakeRight.setDirection(DcMotor.Direction.REVERSE);
        intakeLeft.setDirection(DcMotor.Direction.FORWARD);
        lift.setDirection(DcMotor.Direction.FORWARD);
        leftFront.setDirection(DcMotor.Direction.REVERSE);
        leftBack.setDirection(DcMotor.Direction.REVERSE);
        wheel.setDirection(CRServo.Direction.FORWARD);

        //Setting zero power behavior for dc motors
        leftFront.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        rightFront.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        leftBack.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        rightBack.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        intakeRight.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.FLOAT);
        intakeLeft.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.FLOAT);
        lift.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);

        //Setting power to 0
        leftFront.setPower(0);
        rightFront.setPower(0);
        leftBack.setPower(0);
        rightBack.setPower(0);
        lift.setPower(0);
        intakeLeft.setPower(0);
        intakeRight.setPower(0);
        wheel.setPower(0);
        rackPinion.setPosition(0);

        waitForStart();

        /*
            TELEOP CONTROLS - FINALIZED
            --------------------------------------------------------------------
                MOTOR POWER          GAMEPAD 1      DPAD UP, DPAD DOWN
                DRIVING              GAMEPAD 1      LEFT STICK, RIGHT STICK
                INTAKE AND WHEEL     GAMEPAD 2      LEFT BUMPER, RIGHT BUMPER
                LIFT                 GAMEPAD 2      LEFT STICK Y
                RACK AND PINION      GAMEPAD 2      RIGHT STICK Y
                FOUNDATION           GAMEPAD 1      X, Y
                BLOCK GRABBER        GAMEPAD 2      X, Y



            CONFIGURATION - FINALIZED
            --------------------------------------------------------------------
                DCMotor      leftFront           fL         1   0
                DCMotor      leftBack            bL         1   1
                DCMotor      intakeLeft          inL        1   2
                DCMotor      lift                lift       1   3
                CRServo      wheel               pusher     1   4
                Servo        foundationL         foundL     1   0
                Servo        blockHolder         hold       1   3
                Servo        rackPinion          out        1   1

                DCMotor      rightFront          fR         2   0
                DCMotor      rightBack           bR         2   1
                DCMotor      intakeRight         inR        2   2
                Servo        foundationR         foundR     2   0
        */

        while (!isStopRequested()) {
            //MOTOR POWER - GAMEPAD 1 DPAD UP DPAD DOWN
            if (gamepad1.dpad_up && motorPow < 1) {
                motorPow += 0.1;
                telemetry.addData("Current Motor Power: ", (motorPow * 100) + "%");
                telemetry.update();
                try {
                    Thread.sleep(500);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            } else if (gamepad1.dpad_down && motorPow > 0.1) {
                motorPow -= 0.1;
                telemetry.addData("Current Motor Power: ", (motorPow * 100) + "%");
                telemetry.update();
                try {
                    Thread.sleep(500);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }

            //DRIVING - GAMEPAD 1 LEFT STICK RIGHT STICK
            double speed = Math.hypot(gamepad1.left_stick_x, gamepad1.left_stick_y);
            double angle = Math.atan2(gamepad1.left_stick_y, -gamepad1.left_stick_x);
            double turn = gamepad1.right_stick_x;
            double lfPower = speed * Math.sin(angle + Math.PI / 4) - (turn * motorPow);
            double rfPower = speed * Math.sin(angle - Math.PI / 4) + (turn * motorPow);
            double lbPower = speed * Math.sin(angle - Math.PI / 4) - (turn * motorPow);
            double rbPower = speed * Math.sin(angle + Math.PI / 4) + (turn * motorPow);
            leftFront.setPower(lfPower * motorPow);
            rightFront.setPower(rfPower * motorPow);
            leftBack.setPower(lbPower * motorPow);
            rightBack.setPower(rbPower * motorPow);

            //INTAKE - GAMEPAD 2 LEFT BUMPER RIGHT BUMPER
            if (gamepad2.left_bumper) {
                intakeLeft.setPower(0.95);
                intakeRight.setPower(0.95);
                wheel.setPower(1);
            } else if (gamepad2.right_bumper) {
                intakeLeft.setPower(-0.95);
                intakeRight.setPower(-0.95);
                wheel.setPower(-1);
            } else {
                intakeLeft.setPower(0);
                intakeRight.setPower(0);
                wheel.setPower(0);
            }

            //LIFT - GAMEPAD 2 LEFT STICK Y
            if (gamepad2.left_stick_y > 0.1) {
                lift.setPower(gamepad2.left_stick_y);
            } else if (gamepad2.left_stick_y < -0.1) {
                lift.setPower(gamepad2.left_stick_y);
            } else {
                lift.setPower(0);
            }

            //RACK AND PINION - GAMEPAD 2 RIGHT STICK Y
            if (gamepad2.dpad_left) {
                rackPinion.setPosition(1.3);
            }else if (gamepad2.dpad_right){
                rackPinion.setPosition(0);
            }

            //FOUNDATION - GAMEPAD 1 X Y
            if (gamepad1.x) {
                foundationL.setPosition(0);
                foundationR.setPosition(0);
            } else if (gamepad1.y) {
                foundationL.setPosition(1);
                foundationR.setPosition(1);
            }

            //BLOCK GRABBER - GAMEPAD 2 X Y
            if (gamepad2.x) {
                blockHolder.setPosition(0.7);
            }
            if (gamepad2.y) {
                blockHolder.setPosition(0.4);
            }
        }
    }
}
